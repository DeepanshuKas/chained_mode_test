apiVersion: v1
kind: Pod
metadata:
  labels:
    acicurl: test
  name: curl-pod-{{ _my_loop_var }}
  namespace: {{ ns_name }}
spec:
  activeDeadlineSeconds: 604800
  containers:
  - command: [ "/bin/bash"]
    args: [ "-c", "echo $(date) ; echo '...Starting...' ; i=0; while [ $i -lt 100 ]; do echo $(date ; echo 'curl http://10.30.120.5:8080/api ' ; curl -s -o /dev/null -w '%{http_code}' http://10.30.120.5:8080/api --noproxy 10.30.120.5 --fail --silent  --show-error ;  echo 'curl http://noirolab.cisco.com:8080/api ' ; curl -s -o /dev/null -w '%{http_code}' http://noirolab.cisco.com:8080/api --noproxy noirolab.cisco.com --fail --silent  --show-error) && i=$[$i+1] && sleep 1 ;  done; echo $(date) ; hostname -i ; echo '...Ending...'; trap : TERM INT; sleep infinity & wait" ]
    env:
    - name: HTTP_PROXY
      value: http://insbulab-proxy.insieme.local:8080
    - name: HTTPS_PROXY
      value: http://insbulab-proxy.insieme.local:8080
    - name: NO_PROXY
      value: .cluster.local,.svc,localhost,127.0.0.1,10.30.120.126,10.30.120.120,10.30.120.20,noiro-quay.cisco.com,15.11.0.4,15.11.0.5,15.11.0.6,15.11.0.7,15.11.0.8,15.11.0.9,15.11.0.10,15.11.0.11,15.11.0.12,15.11.0.13,15.11.0.14,15.11.0.15,15.11.0.16,15.11.0.17,15.11.0.18,15.11.0.19,15.11.0.20,15.11.0.21,15.11.0.22,15.11.0.23,15.11.0.24,15.11.0.25,15.11.0.26,15.11.0.27,15.11.0.28,15.11.0.29,15.11.0.30,15.11.0.31,15.11.0.32,15.11.0.33,15.11.0.34,172.30.0.1,172.30.0.10,oauth-openshift.apps.openupi.noiro.local,console-openshift-console.apps.openupi.noiro.local,downloads-openshift-console.apps.openupi.noiro.local,1.100.1.1,noirolab.cisco.com
    image: noiro-quay.cisco.com/noiro/alp-curl:withbash
    imagePullPolicy: IfNotPresent
    name: dummy
    resources: {}
    securityContext:
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: {{ node_name }}
  nodeSelector:
    kubernetes.io/hostname: {{ node_name }}
    kubernetes.io/os: linux
  priority: 0
  restartPolicy: Never
  schedulerName: default-scheduler
  securityContext:
    allowPrivilegeEscalation: true
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
